version: "3.5"

services:
  bwv_db:
    networks:
      - looplijsten_backend
    build: ./bwv_db
    ports:
      - "5410:5432"
    environment:
      POSTGRES_DB: "looplijsten_bwv"
      POSTGRES_USER: "looplijsten_bwv"
      POSTGRES_PASSWORD: "insecure"
    volumes:
      - postgresql-bwv-data:/var/lib/postgresql/data
  database:
    networks:
      - looplijsten_backend
    image: amsterdam/postgres11
    shm_size: "512m"
    ports:
      - "5409:5432"
    environment:
      POSTGRES_DB: "looplijsten"
      POSTGRES_USER: "looplijsten"
      POSTGRES_PASSWORD: "insecure"
    volumes:
      - postgresql-data:/var/lib/postgresql/data
  api:
    hostname: api
    image: api
    networks:
      - looplijsten_backend
      - top_and_zaak_backend_bridge
    build:
      context: ./app
      args:
        - "ONDERHUUR_MODEL_CREDS=${ONDERHUUR_MODEL_CREDS}"
        - "ONDERHUUR_MODEL_PERSONAL_ACCESS_TOKEN=${ONDERHUUR_MODEL_PERSONAL_ACCESS_TOKEN}"
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/app
      - ./api/deploy:/deploy
    command: bash -c "/app/wait-for.sh database:5432 && /app/wait-for.sh bwv_db:5432 && /app/deploy/entrypoint.development.sh"
    depends_on:
      - database
      - bwv_db

  rabbitmq:
    image: rabbitmq:3
    networks:
      - looplijsten_backend
    ports:
      - 5673:5672
    env_file:
      - .env

  looplijsten_celery_worker:
    image: api
    container_name: looplijsten_celery_worker
    hostname: looplijsten_celery_worker
    command: bash -c "/app/wait-for.sh rabbitmq:5672 && /app/wait-for.sh api:8000 -- /app/celery.sh"
    depends_on:
      - api
      - database
      - bwv_db
      - rabbitmq
    env_file:
      - .env
    networks:
      - looplijsten_backend
    restart: on-failure

  looplijsten_celery_beat:
    image: api
    container_name: looplijsten_celery_beat
    hostname: looplijsten_celery_beat
    command: bash -c "/app/wait-for.sh rabbitmq:5672 && /app/wait-for.sh api:8000 -- /app/celery-beat.sh"
    depends_on:
      - api
      - database
      - bwv_db
      - rabbitmq
      - looplijsten_celery_worker
    env_file:
      - .env
    networks:
      - looplijsten_backend
    restart: on-failure

networks:
  looplijsten_backend:
    external: true
  top_and_zaak_backend_bridge:
    external: true

volumes:
  postgresql-bwv-data:
  postgresql-data:
