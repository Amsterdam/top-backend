services:
  api:
    hostname: api
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-salmagundi/top-backend}:${VERSION:-latest}
    networks:
      - top_network
      - top_and_zaak_backend_bridge
    build:
      context: ./app
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/app
      - ./api/deploy:/deploy
    entrypoint: /app/deploy/entrypoint.development.sh
    command: uwsgi --ini /app/deploy/config.ini --py-auto-reload=1 --cheaper-initial=1 --cheaper=1 --processes=10
    depends_on:
      - database

  top-redis:
    image: redis:alpine
    environment:
      - REDIS_PASSWORD=insecure
      - REDIS_MAXMEM=100mb
    networks:
      - top_network
    ports:
      - "6380:6379"

  database:
    networks:
      - top_network
    image: amsterdam/postgres12
    shm_size: "512m"
    ports:
      - "5409:5432"
    environment:
      - POSTGRES_DB=top
      - POSTGRES_USER=top
      - POSTGRES_PASSWORD=insecure
    volumes:
      - postgresql-data:/var/lib/postgresql/data

  top_celery_worker:
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-salmagundi/top-backend}:${VERSION:-latest}
    container_name: top_celery_worker
    hostname: top_celery_worker
    entrypoint: /app/deploy/docker-entrypoint.celery.sh
    command: bash -c "/app/wait-for.sh http://api:8000 -- /app/celery.sh"
    depends_on:
      - api
      - database
      - top-redis
    env_file:
      - .env
    networks:
      - top_network
    restart: on-failure

  top_celery_beat:
    image: ${REGISTRY:-127.0.0.1:5001}/${REPOSITORY:-salmagundi/top-backend}:${VERSION:-latest}
    container_name: top_celery_beat
    hostname: top_celery_beat
    entrypoint: /app/deploy/docker-entrypoint.celery.sh
    command: bash -c "/app/wait-for.sh http://api:8000 -- /app/celery-beat.sh"
    # command: bash -c "/app/celery-beat.sh"
    depends_on:
      - api
      - database
      - top-redis
      - top_celery_worker
    env_file:
      - .env
    networks:
      - top_network
    restart: on-failure

networks:
  top_network:
    external: true
  top_and_zaak_backend_bridge:
    external: true

volumes:
  postgresql-data:
